---
- name: Configure systemd service for TigerVNC
  block:
    - name: Determine if TigerVNC was installed from source
      ansible.builtin.stat:
        path: /usr/local/libexec/vncsession-start
      register: tigervnc_source_check

    - name: Ensure systemd service file exists
      ansible.builtin.template:
        src: vncserver.service.j2
        dest: "/etc/systemd/system/{{ tigervnc_service_name }}"
        mode: "0744"
      become: true
      notify: Restart TigerVNC

    - name: Ensure handlers are notified now to systemd conflicts
      ansible.builtin.meta: flush_handlers

    - name: Reload systemd daemon to recognize service file
      ansible.builtin.systemd_service:
        daemon_reload: true
      when: tigervnc_service_manage | bool
      become: true

    - name: Ensure TigerVNC service is enabled/disabled as configured
      ansible.builtin.service:
        name: "{{ tigervnc_service_name }}"
        enabled: "{{ tigervnc_service_enabled }}"
      ignore_errors: "{{ ansible_check_mode }}"
      when: tigervnc_service_manage | bool
      become: true

    - name: Ensure TigerVNC service is started when enabled
      ansible.builtin.service:
        name: "{{ tigervnc_service_name }}"
        state: started
      ignore_errors: "{{ ansible_check_mode }}"
      when:
        - tigervnc_service_manage | bool
        - tigervnc_service_enabled | bool
      become: true

    - name: Ensure TigerVNC service is stopped when disabled
      ansible.builtin.service:
        name: "{{ tigervnc_service_name }}"
        state: stopped
      ignore_errors: "{{ ansible_check_mode }}"
      when:
        - tigervnc_service_manage | bool
        - not (tigervnc_service_enabled | bool)
      become: true
